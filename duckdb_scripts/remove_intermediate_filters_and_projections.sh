#!/bin/bash

# Remove intermediate filters and projections from the query plans generated by DuckDB.
# More specifically, HASHJOIN -> PROJECTION -> FILTER -> HASHJOIN will be modified to HASHJOIN -> HASHJOIN.

# This script will recursively process all .json files in the source folder, remove intermediate FILTER+PROJECTION nodes, 
# and write the modified query plans to the destination folder.

# Define usage function
usage() {
    echo "Usage: $0 source_folder destination_folder"
    exit 1
}

# Check if the correct number of arguments is provided
if [ "$#" -ne 2 ]; then
    usage
fi

SOURCE_FOLDER=$1
DESTINATION_FOLDER=$2

# python script that removes FILTER+PROJECTION from a query plan
PY_SCRIPT="remove_filter_proj_from_plan.py"

# Check that the source folder exists
if [ ! -d "$SOURCE_FOLDER" ]; then
    echo "Error: Source folder '$SOURCE_FOLDER' does not exist."
    exit 1
fi

# Check if the destination folder already exists
if [ -d "$DESTINATION_FOLDER" ]; then
    echo "Error: Destination folder '$DESTINATION_FOLDER' already exists."
    exit 1
fi

# Create the destination folder
mkdir -p "$DESTINATION_FOLDER"

# Function to copy and process files
process_folder() {
    local src_folder="$1"
    local dest_folder="$2"

    # Iterate over all items in the source folder
    for item in "$src_folder"/*; do
        if [ -d "$item" ]; then
            # If it's a directory, recursively call this function
            local folder_name=$(basename "$item")
            mkdir -p "$dest_folder/$folder_name"
            process_folder "$item" "$dest_folder/$folder_name"
        elif [ -f "$item" ]; then
            # If it's a file, check if it's a .json file
            if [[ "$item" == *run_1.json ]]; then
                # Process the .json file with the Python script
                # -f flag forces the script to write the .json file, even when nothing is modified
                python3 $PY_SCRIPT -i "$item" -o "$dest_folder/$(basename "$item")" -f
            # else
                # Copy the file as is if it's not a .json file
                # cp "$item" "$dest_folder/"
            fi
        fi
    done
}


echo "Removing intermediate FILTER+PROJECTION nodes from query plans in '$SOURCE_FOLDER'."

# Call the process_folder function to start the copying and processing
process_folder "$SOURCE_FOLDER" "$DESTINATION_FOLDER"

echo "Done. Modified query plans are saved in '$DESTINATION_FOLDER'."
