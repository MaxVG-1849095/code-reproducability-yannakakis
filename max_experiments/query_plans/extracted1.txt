AggregateExec: mode=Single, gby=[], aggr=[min(mc.note), min(t.title), min(t.production_year)], statistics=[Rows=Absent, Bytes=Absent, [(Col[0]:),(Col[1]:),(Col[2]:)]]
  └──ProjectionExec: expr=[note@3 as note, title@1 as title, production_year@2 as production_year], statistics=[Rows=Absent, Bytes=Absent, [(Col[0]:),(Col[1]:),(Col[2]:)]]
    └──Flatten, statistics=[Rows=Absent, Bytes=Absent, [(Col[0]:),(Col[1]:),(Col[2]:),(Col[3]:),(Col[4]:),(Col[5]:),(Col[6]:),(Col[7]:),(Col[8]:),(Col[9]:)]]
      └──CoalesceBatchesExec: target_batch_size=8192, statistics=[Rows=Inexact(505663), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(2528312)) Null=Inexact(0)),(Col[1]: Null=Inexact(0)),(Col[2]: Min=Inexact(Int32(1880)) Max=Inexact(Int32(2019)) Null=Inexact(72094))]]
        └──FilterExec: id@0 >= 2 AND id@0 <= 2525745 AND id@0 IS NOT NULL, statistics=[Rows=Inexact(505663), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(2528312)) Null=Inexact(0)),(Col[1]: Null=Inexact(0)),(Col[2]: Min=Inexact(Int32(1880)) Max=Inexact(Int32(2019)) Null=Inexact(72094))]]
          └──ParquetExec: file_groups={1 group: [[home/maxvg/Documents/masterINF/Masterproef/code-reproducability-yannakakis/benchmarks/imdb/parquet-zstd/title.parquet]]}, projection=[id, title, production_year], predicate=id@0 >= 2 AND id@0 <= 2525745 AND id@0 IS NOT NULL, pruning_predicate=id_max@0 >= 2 AND id_min@1 <= 2525745, statistics=[Rows=Exact(2528312), Bytes=Absent, [(Col[0]: Min=Exact(Int32(1)) Max=Exact(Int32(2528312)) Null=Exact(0)),(Col[1]: Null=Exact(0)),(Col[2]: Min=Exact(Int32(1880)) Max=Exact(Int32(2019)) Null=Exact(72094))]]
      └──FilterExec: NOT note@0 LIKE %(as Metro-Goldwyn-Mayer Pictures)% AND (note@0 LIKE %(co-production)% OR note@0 LIKE %(presents)%), statistics=[Rows=Inexact(521826), Bytes=Absent, [(Col[0]: Null=Inexact(1271989)),(Col[1]: Min=Inexact(Int32(1)) Max=Inexact(Int32(2)) Null=Inexact(0)),(Col[2]: Min=Inexact(Int32(2)) Max=Inexact(Int32(2525745)) Null=Inexact(0))]]
        └──ProjectionExec: expr=[note@2 as note, company_type_id@1 as company_type_id, movie_id@0 as movie_id], statistics=[Rows=Exact(2609129), Bytes=Absent, [(Col[0]: Null=Exact(1271989)),(Col[1]: Min=Exact(Int32(1)) Max=Exact(Int32(2)) Null=Exact(0)),(Col[2]: Min=Exact(Int32(2)) Max=Exact(Int32(2525745)) Null=Exact(0))]]
          └──ParquetExec: file_groups={1 group: [[home/maxvg/Documents/masterINF/Masterproef/code-reproducability-yannakakis/benchmarks/imdb/parquet-zstd/movie_companies.parquet]]}, projection=[movie_id, company_type_id, note], statistics=[Rows=Exact(2609129), Bytes=Absent, [(Col[0]: Min=Exact(Int32(2)) Max=Exact(Int32(2525745)) Null=Exact(0)),(Col[1]: Min=Exact(Int32(1)) Max=Exact(Int32(2)) Null=Exact(0)),(Col[2]: Null=Exact(1271989))]]
      └──CoalesceBatchesExec: target_batch_size=8192, statistics=[Rows=Inexact(276007), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(2)) Max=Inexact(Int32(2525793)) Null=Inexact(0)),(Col[1]: Min=Inexact(Int32(99)) Max=Inexact(Int32(113)) Null=Inexact(0))]]
        └──FilterExec: movie_id@0 <= 2525745 AND movie_id@0 IS NOT NULL, statistics=[Rows=Inexact(276007), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(2)) Max=Inexact(Int32(2525793)) Null=Inexact(0)),(Col[1]: Min=Inexact(Int32(99)) Max=Inexact(Int32(113)) Null=Inexact(0))]]
          └──ParquetExec: file_groups={1 group: [[home/maxvg/Documents/masterINF/Masterproef/code-reproducability-yannakakis/benchmarks/imdb/parquet-zstd/movie_info_idx.parquet]]}, projection=[movie_id, info_type_id], predicate=movie_id@1 <= 2525745 AND movie_id@1 IS NOT NULL, pruning_predicate=movie_id_min@0 <= 2525745, statistics=[Rows=Exact(1380035), Bytes=Absent, [(Col[0]: Min=Exact(Int32(2)) Max=Exact(Int32(2525793)) Null=Exact(0)),(Col[1]: Min=Exact(Int32(99)) Max=Exact(Int32(113)) Null=Exact(0))]]
      └──FilterExec: CAST(id@0 AS Int64) >= 99, statistics=[Rows=Inexact(4), Bytes=Inexact(13), [(Col[0]: Min=Inexact(Int32(99)) Max=Inexact(Int32(113)) Null=Inexact(0))]]
        └──ProjectionExec: expr=[id@0 as id], statistics=[Rows=Inexact(23), Bytes=Inexact(92), [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(113)) Null=Inexact(0))]]
          └──CoalesceBatchesExec: target_batch_size=8192, statistics=[Rows=Inexact(23), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(113)) Null=Inexact(0)),(Col[1]: Null=Inexact(0))]]
            └──FilterExec: info@1 = top 250 rank AND info@1 IS NOT NULL, statistics=[Rows=Inexact(23), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(113)) Null=Inexact(0)),(Col[1]: Null=Inexact(0))]]
              └──ParquetExec: file_groups={1 group: [[home/maxvg/Documents/masterINF/Masterproef/code-reproducability-yannakakis/benchmarks/imdb/parquet-zstd/info_type.parquet]]}, projection=[id, info], predicate=info@1 = top 250 rank AND info@1 IS NOT NULL, pruning_predicate=info_min@0 <= top 250 rank AND top 250 rank <= info_max@1, statistics=[Rows=Exact(113), Bytes=Absent, [(Col[0]: Min=Exact(Int32(1)) Max=Exact(Int32(113)) Null=Exact(0)),(Col[1]: Null=Exact(0))]]
      └──FilterExec: CAST(id@0 AS Int64) <= 2, statistics=[Rows=Inexact(1), Bytes=Inexact(2), [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(2)) Null=Inexact(0))]]
        └──ProjectionExec: expr=[id@0 as id], statistics=[Rows=Inexact(1), Bytes=Inexact(4), [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(4)) Null=Inexact(0))]]
          └──CoalesceBatchesExec: target_batch_size=8192, statistics=[Rows=Inexact(1), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(4)) Null=Inexact(0)),(Col[1]: Null=Inexact(0))]]
            └──FilterExec: kind@1 = production companies AND kind@1 IS NOT NULL, statistics=[Rows=Inexact(1), Bytes=Absent, [(Col[0]: Min=Inexact(Int32(1)) Max=Inexact(Int32(4)) Null=Inexact(0)),(Col[1]: Null=Inexact(0))]]
              └──ParquetExec: file_groups={1 group: [[home/maxvg/Documents/masterINF/Masterproef/code-reproducability-yannakakis/benchmarks/imdb/parquet-zstd/company_type.parquet]]}, projection=[id, kind], predicate=kind@1 = production companies AND kind@1 IS NOT NULL, pruning_predicate=kind_min@0 <= production companies AND production companies <= kind_max@1, statistics=[Rows=Exact(4), Bytes=Absent, [(Col[0]: Min=Exact(Int32(1)) Max=Exact(Int32(4)) Null=Exact(0)),(Col[1]: Null=Exact(0))]]